<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
		
		<!-- 引用database.properties -->
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:database.properties" />
		</bean>
		
		<!-- 配置数据源,来自commons.dbcp架包 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
			<property name="driverClassName" value="${driver}"/>
			<property name="url" value="${url}"/>
			<property name="username" value="${user}"/>
			<property name="password" value="${password}"/>
		</bean> 
		
		
		<!-- SqlSessionFactoryBean -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
				<!-- 引用数据源 -->
				<property name="dataSource" ref="dataSource" />
				<!-- 引用Mybatis配置文件中的配置 -->
				<property name="configLocation" value="classpath:mybatis-config.xml" />
		</bean>
		
		
		<!-- 定义事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<!-- 指定管理的数据源 -->
			<property name="dataSource" ref="dataSource" />
		</bean>
		
		
		<!-- 通过MapperScannerConfigurer映射器,配置dao层,不能使用id属性 -->
		<!-- 自动扫描(数据访问层,通过userMapper.xml文件),
		并自动创建该层的实现类,并默命名:接口名称,首字母小写 userMapper -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="cn.jbit.dao" />
		</bean>
		
		<!-- 扫描(业务逻辑层)注解 -->
		<context:component-scan base-package="cn.jbit.biz" />
		
		<!-- 配置声明式事务 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager" >
			<tx:attributes>
				<tx:method name="find*" propagation="SUPPORTS" />
				<tx:method name="del*"  propagation="REQUIRED"/>
				<tx:method name="add*" 	propagation="REQUIRED"/>
				<tx:method name="update*" propagation="REQUIRED"/>
			</tx:attributes>
		</tx:advice>
		
		<!-- 使用AOP指定事务引用 -->
		<aop:config>
			<!-- 定义切入点 -->
			<aop:pointcut expression="execution(* cn.jbit.dao.*.*(..))" id="pointcut"/>
			<!-- 指定切入点与事务 -->
			<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
		</aop:config>
		
		
		
</beans>